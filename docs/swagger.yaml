basePath: /
definitions:
  dto.BusinessResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/dto.CategoryResponse'
        type: array
      description:
        type: string
      id:
        type: string
      location:
        type: string
      name:
        type: string
      userId:
        type: string
      websiteUrl:
        type: string
    type: object
  dto.CategoryResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  dto.CreateBusinessRequest:
    properties:
      description:
        type: string
      location:
        type: string
      name:
        type: string
      websiteUrl:
        type: string
    required:
    - name
    type: object
  dto.CreateUserRequest:
    properties:
      email:
        type: string
      fullName:
        type: string
      password:
        type: string
      phone:
        type: string
      profileName:
        type: string
    type: object
  dto.ResetPasswordConfirmCompleteRequest:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
  dto.ResetPasswordConfirmRequest:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
  dto.ResetPasswordRequest:
    properties:
      email:
        type: string
    type: object
  dto.SignInRequest:
    properties:
      password:
        type: string
      phone:
        type: string
    required:
    - password
    - phone
    type: object
  dto.SignInResponse:
    properties:
      accessToken:
        type: string
    type: object
  dto.SignUpInitRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  dto.SignUpVerifyRequest:
    properties:
      code:
        maxLength: 6
        minLength: 6
        type: string
      phone:
        type: string
    required:
    - code
    - phone
    type: object
  dto.UpdateBusinessRequest:
    properties:
      description:
        type: string
      location:
        type: string
      name:
        type: string
      websiteUrl:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a Wowza API.
  title: Wowza API
  version: "1.0"
paths:
  /api/v1/auth/sign-in:
    post:
      consumes:
      - application/json
      description: Logs a user in
      parameters:
      - description: Sign In
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SignInResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: SignIn
      tags:
      - auth
  /api/v1/auth/sign-up/complete:
    post:
      consumes:
      - application/json
      description: Completes a new user registration
      parameters:
      - description: Sign Up Complete
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: SignUp Complete
      tags:
      - auth
  /api/v1/auth/sign-up/init:
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: Sign Up Init
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpInitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: SignUp Init
      tags:
      - auth
  /api/v1/auth/sign-up/verify:
    post:
      consumes:
      - application/json
      description: Verifies a new user
      parameters:
      - description: Sign Up Verify
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: SignUp Verify
      tags:
      - auth
  /api/v1/password/reset:
    post:
      consumes:
      - application/json
      description: Initiates the password reset process for a user.
      parameters:
      - description: User's email
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Reset password
      tags:
      - password
  /api/v1/password/reset/complete:
    post:
      consumes:
      - application/json
      description: Completes the password reset process by setting a new password.
      parameters:
      - description: New password and token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordConfirmCompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Complete password reset
      tags:
      - password
  /api/v1/password/reset/confirm:
    post:
      consumes:
      - application/json
      description: Confirms the password reset using a token sent to the user's email.
      parameters:
      - description: Reset token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordConfirmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Confirm password reset
      tags:
      - password
  /api/v1/posts:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new post
      parameters:
      - description: Video file
        in: formData
        name: video
        required: true
        type: file
      - description: User ID
        in: formData
        name: user_id
        required: true
        type: string
      - description: Post description
        in: formData
        name: description
        type: string
      - description: Video duration
        in: formData
        name: duration
        required: true
        type: number
      - description: Post visibility
        enum:
        - public
        - friends
        - private
        in: formData
        name: visibility
        required: true
        type: string
      - description: Hashtags for the post (use multiple fields for multiple hashtags)
        in: formData
        name: hashtags
        type: string
      - description: Tags for the post (use multiple fields for multiple tags)
        in: formData
        name: tags
        type: string
      - description: Allow comments
        in: formData
        name: allow_comments
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create Post
      tags:
      - posts
  /businesses:
    post:
      consumes:
      - application/json
      description: Create a new business page
      parameters:
      - description: Business Info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBusinessRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.BusinessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create Business
      tags:
      - businesses
  /businesses/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a business page
      parameters:
      - description: Business ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete Business
      tags:
      - businesses
    get:
      consumes:
      - application/json
      description: Get a business page by its ID
      parameters:
      - description: Business ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BusinessResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Business By ID
      tags:
      - businesses
    put:
      consumes:
      - application/json
      description: Update a business page
      parameters:
      - description: Business ID
        in: path
        name: id
        required: true
        type: string
      - description: Business Info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateBusinessRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BusinessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update Business
      tags:
      - businesses
  /categories:
    get:
      consumes:
      - application/json
      description: Get a list of all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CategoryResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Categories
      tags:
      - categories
swagger: "2.0"
